# quiz 1 question 1

#The American Community Survey distributes downloadable data about United States communities. 
#Download the 2006 microdata survey about housing for the state of Idaho using download.file() from here: 
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv 

# and load the data into R. The code book, describing the variable names is here: 
# https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf 


# How many properties are worth $1,000,000 or more?

quiz1Data <- read.csv("./data/myData.csv", header=T)
df <- table(quiz1Data$VAL)

# 24 represents value of 1000000 or more

  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21 
 75  42  33  30  26  29  23  70  99 119 152 199 233 495 483 486 357 502 232 312 164 
 22  23  24 
159  47  xx ----answer represented by this value 



# quiz 1 question 2


# quiz 1 question 3

> library("xlsx", lib.loc="C:/Program Files/R/R-3.1.0/library")
> url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
> download.file(url, tmpData, mode="wb")
> r <- 18:23
> c <- 7:15
> dat <- read.xlsx(tmpData, 1, colIndex=c, rowIndex=r)
> sum(dat$Zip*dat$Ext,na.rm=T) 

[1] xxx -- answer is represented by this value

# quiz 1 question 4
call <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
> r <- xmlInternalTreeParse(call)
> rNode <- xmlRoot(r)
> names(rNode[[1]][[1]])
             name           zipcode      neighborhood   councildistrict    policedistrict 
           "name"         "zipcode"    "neighborhood" "councildistrict"  "policedistrict" 
       location_1 
     "location_1" 
> zipcode <- xpathSApply(rNode, "//zipcode", xmlValue)
> table(zipcode == 21231)


FALSE  TRUE 
 1200   xxx --- answer is represented by this value 

# quiz 1 question 5

> call <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv "
DT <- fread(call)

> check <- function (myY, myT) {
+     message(sprintf("Elapsed time: %.10f", t[3]))
+     print(y)
+ }
> check(myY, myT)
Elapsed time: 0.0200000000
       1        2 
99.80667 96.66534 


> t <- system.time(y <- mean(DT$pwgtp15,by=DT$SEX))
> check(myY, myT)
Elapsed time: 0.0000000000
[1] 98.21613


> t <- system.time(y <- DT[,mean(pwgtp15),by=SEX])
> check(myY, myT)
Elapsed time: 0.0200000000
   SEX       V1
1:   1 99.80667
2:   2 96.66534

> t <- system.time(y <- rowMeans(DT)[DT$SEX==1]) + system.time(rowMeans(DT)[DT$SEX==2])
Error in rowMeans(DT) : 'x' must be numeric
Timing stopped at: 1.25 0 1.25 
> check(myY, myT)
Elapsed time: 0.0200000000
   SEX       V1
1:   1 99.80667
2:   2 96.66534

> t <- system.time(y <- mean(DT[DT$SEX==1,]$pwgtp15)) + system.time(mean(DT[DT$SEX==2,]$pwgtp15))
> check(myY, myT)
Elapsed time: 0.0800000000
[1] 99.80667

t <- system.time(y <- tapply(DT$pwgtp15,DT$SEX,mean))
> check(myY, myT)
Elapsed time: 0.0000000000
       1        2 
99.80667 96.66534

